// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// pnpm dlx prisma migrate dev --name init
// pnpm dlx prisma generate
// pnpm dlx prisma studio

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id() @default(uuid())
  username    String @unique
  displayName String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  rooms    Room[]
  votes    Vote[]
  chats    Chat[]
  posts    Post[]
  comments Comment[]
}

model Room {
  id     String @id() @default(uuid())
  name   String
  hostId String

  host User @relation(fields: [hostId], references: [id])

  createdAt DateTime @default(now())

  votes Vote[]
  chats Chat[]
}

model Chat {
  id      String @id() @default(uuid())
  message String
  userId  String
  roomId  String

  user      User     @relation(fields: [userId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])
  createdAt DateTime @default(now())
}

model Vote {
  id     String @id() @default(uuid())
  userId String
  roomId String

  user User @relation(fields: [userId], references: [id])
  room Room @relation(fields: [roomId], references: [id])

  createdAt DateTime @default(now())
}

model Post {
  id       String @id @default(uuid())
  title    String
  body     String
  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  comments  Comment[]
}

model Comment {
  id     String @id @default(uuid())
  text   String
  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  postId String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
